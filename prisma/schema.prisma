// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../backend/node_modules/.prisma/client"
} 

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  email String @unique
  name  String?
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id   Int     @id @default(autoincrement())
  name String
  description String?
  price Float
  stock Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderItems OrderItem[]
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  status OrderStatus @default(PENDING)
  total Float @default(0)
  items OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model OrderItem {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  quantity Int 
  price Float
}


enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}